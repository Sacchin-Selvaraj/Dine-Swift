server:
  port: 8080

# Optional: For better debugging
logging:
  level:
    org:
      hibernate:
        SQL: DEBUG
        type:
          descriptor:
            sql:
              BasicBinder: TRACE


jwt:
  secret-key: "3A7F5D9C1E6B8A2F4D9C0E5B8A1F3D7E2C6A9D0B4F8E3C7A1D5F9E2B6C8A0D4"
  expiration-time: 86400000

  level:
    org.apache.kafka: ERROR
    org.springframework.kafka: ERROR
    org.apache.kafka.clients.NetworkClient: OFF
    org.apache.kafka.clients.admin.AdminClientConfig: OFF

spring:
  project:
    name: user-service
  datasource:
    url: jdbc:postgresql://localhost:5432/user_db
    username: postgres
    password: Sacchin
    driver-class-name: org.postgresql.Driver

  jpa:
    hibernate:
      ddl-auto: none
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    show-sql: true
    properties:
      hibernate:
        format_sql: true

  config:
    activate:
      on-profile: nokafka

  autoconfigure:
    exclude:
      - org.springframework.boot.autoconfigure.kafka.KafkaAutoConfiguration
      - org.springframework.boot.autoconfigure.kafka.KafkaStreamsAutoConfiguration
      - org.springframework.boot.autoconfigure.kafka.KafkaReactiveStreamsAutoConfiguration


  kafka:
    enabled: false
    bootstrap-servers: localhost:9092
    listener:
      auto-startup: false
      enabled: false
    consumer:
      enabled: false
    producer:
      enabled: false

  admin:
    enabled: false
    fail-fast: false
    check-topic-existence: false
    properties:
      bootstrap.servers:
    producer:
      bootstrap-servers:
    consumer:
      bootstrap-servers:
    streams:
      bootstrap-servers:


app:
  kafka:
    topic:
      email-verification-topic: email
      sms-verification-topic: sms

